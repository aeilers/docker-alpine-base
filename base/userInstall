#!/usr/bin/env bash

###
# user install script for Alpine Linux on Docker
# ${1} - user name
# ${2} - user password
# ${3} - user private ssh key
# ${4} - user public ssh key
###
runUser () {
    local DIVIDER="===================="
    local TEMPLATE="\n\n${DIVIDER}${DIVIDER}${DIVIDER}\n%s\n\n\n"

    if [[ "${EUID}" == "0" ]]; then
        printf "${TEMPLATE}" "Creating User Account"
        createUser ${1} ${2}

        printf "${TEMPLATE}" "Installing Alpine Linux Packages for Environment"
        setupEnvironment ${1}

        if [[ ${3} && ${4} ]]; then
            printf "${TEMPLATE}" "Setup SSH User config"
            setupSsh ${1} ${3} ${4}
        else
            printf "${TEMPLATE}" "Setup Standard User config"
            setupUser
        fi
    else
        printf "${TEMPLATE}" "User must be root to run this script."
    fi
}

###
# setup basic user
# ${1} - user name
# ${2} - user password
###
createUser () {
    export HOME_DIR="/home/${1}"
    export WORK_DIR="workspace"

    adduser -D -G wheel -s /bin/bash -S ${1}
    printf "${1}:$(printf "${2}" | sha512sum)" | chpasswd -e

    mkdir -p ${HOME_DIR}/${WORK_DIR}

    chown -R ${1}:wheel /opt
    chown -R ${1}:wheel ${HOME_DIR}/${WORK_DIR}
}

###
# setup user git config
# ${1} - user name
###
setupEnvironment () {
    apk update

    apk add \
        docker \
        docker-bash-completion \
        git \
        openssh-client \
        sudo

    git config --global user.name "${1}"
}

###
# setup user ssh project
# ${1} - user name
# ${2} - user private ssh key
# ${3} - user public ssh key
###
setupSsh () {
    local PREFIX="-----BEGIN RSA PRIVATE KEY-----"
    local SUFFIX="-----END RSA PRIVATE KEY-----"

    mkdir -p ${HOME_DIR}/.ssh

    # parse private key
    local TEMP="${2}"
    TEMP=${TEMP/#${PREFIX}/}
    TEMP=${TEMP/%${SUFFIX}/}
    TEMP="$(tr " " "\n" <<< ${TEMP})"

    # create private and public keys
    printf "%s\n" "${PREFIX}" "${TEMP}" "${SUFFIX}" > ${HOME_DIR}/.ssh/id_rsa
    printf "${3}" > ${HOME_DIR}/.ssh/id_rsa.pub

    # get host info from github.com and add it to known_hosts to create base known_hosts file
    ssh-keyscan -H "github.com" >> ${HOME_DIR}/.ssh/known_hosts

    chown -R ${1}:wheel ${HOME_DIR}/.ssh

    chmod 600 ${HOME_DIR}/.ssh/id_rsa
    chmod 644 ${HOME_DIR}/.ssh/id_rsa.pub
    chmod 644 ${HOME_DIR}/.ssh/known_hosts
}

###
# setup user https project
###
setupUser () {
    # setup credential memory cache
    git config --global credential.helper cache

    # increase cache timeout from default to 8 hours
    git config --global credential.helper 'cache --timeout=28800'
}

###
# run user install script
###
runUser ${1} ${2} ${3} ${4}
